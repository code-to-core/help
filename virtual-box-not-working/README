There are utilities for signing kernel modules so that they
can be loaded into the kernel in secure boot mode. The general
procedure is as follows:

1. Generate and encrypt the signing key and the public key
    (mok-keygen.sh). There are two password involved here. 
        a) One which is used to encrypt the module signing private 
           key. You need to remember this long term as you will need 
           it every time you want to sign a module. The corresponding 
           public key is a machine owner key, used to validate the 
           signature when the modeule is loaded.  
        b) mokutil is called to enroll the public key with secure boot and will 
           ask for a password. You should remember the password and 
           immediately reboot, following BIOS prompts to enroll the key.
           You need to remember this password short-term (through reboot)

2. Reboot and register the public key with the EFI BIOS. One the public
   key is enrolled, the kernel will load modules signed with the 
   private key (the private key is encrypted with your password, make it
   string and make the filr readable only by yourself.

3. When a module need to be signed and loaded, use the signing key
    (Make sure you are absolutely sure of where it came from) and run
    mok-sign-and-load.sh


The kernel will only load signed modules.
The modules are signed with the private key (MOK.priv) which has been encrypted
You will need to know the module signing password to sign a module

When a module is loaded it is checked against the public key in the BIOS
store. No-match => No Load.

If you delete the public key from the machine store, none of the previously 
signed modeules will load.

    
